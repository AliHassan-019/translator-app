{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\translator-app\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// frontend/pages/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from '../components/Sidebar';\nimport { FaUsers, FaUserShield } from 'react-icons/fa';\nimport UserList from '../components/UserList';\nimport axiosInstance from '../api/axiosConfig';\nimport OpenAiSettings from './OpenAiSettings'; // Import the new component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [activePage, setActivePage] = useState(\"users\");\n  const [userCount, setUserCount] = useState(0);\n  const [adminCount, setAdminCount] = useState(0);\n  useEffect(() => {\n    const fetchUserCounts = async () => {\n      try {\n        const response = await axiosInstance.get('/admin/users');\n        const allUsers = response.data;\n        const totalUsers = allUsers.filter(user => user.role === 'user').length;\n        const totalAdmins = allUsers.filter(user => user.role === 'admin').length;\n        setUserCount(totalUsers);\n        setAdminCount(totalAdmins);\n      } catch (error) {\n        console.error(\"Error fetching user counts:\", error);\n      }\n    };\n    // Only fetch counts if we're on a page that needs them.\n    // (Alternatively, you could always fetch, but it’s unnecessary for the openai page.)\n    if (activePage !== 'openai') {\n      fetchUserCounts();\n    }\n  }, [activePage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      activePage: activePage,\n      setActivePage: setActivePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: activePage === \"openai\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"OpenAI API Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(OpenAiSettings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stats-grid\",\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-card\",\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: () => setActivePage(\"users\"),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-icon purple-bg\",\n              children: /*#__PURE__*/_jsxDEV(FaUsers, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: userCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stats-card\",\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: () => setActivePage(\"admins\"),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-icon pink-bg\",\n              children: /*#__PURE__*/_jsxDEV(FaUserShield, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: adminCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Admins\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), activePage === \"users\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"All Registered Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(UserList, {\n            activeCard: \"users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), activePage === \"admins\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Admin Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(UserList, {\n            activeCard: \"admins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"er5BV/aPSZpRTOffSr7yWqC/iY8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","FaUsers","FaUserShield","UserList","axiosInstance","OpenAiSettings","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","activePage","setActivePage","userCount","setUserCount","adminCount","setAdminCount","fetchUserCounts","response","get","allUsers","data","totalUsers","filter","user","role","length","totalAdmins","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","cursor","onClick","activeCard","_c","$RefreshReg$"],"sources":["E:/GitHub/translator-app/frontend/src/pages/Dashboard.js"],"sourcesContent":["// frontend/pages/Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport Sidebar from '../components/Sidebar';\r\nimport { FaUsers, FaUserShield } from 'react-icons/fa';\r\nimport UserList from '../components/UserList';\r\nimport axiosInstance from '../api/axiosConfig';\r\nimport OpenAiSettings from './OpenAiSettings'; // Import the new component\r\n\r\nconst Dashboard = () => {\r\n  const [activePage, setActivePage] = useState(\"users\");\r\n  const [userCount, setUserCount] = useState(0);\r\n  const [adminCount, setAdminCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchUserCounts = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('/admin/users');\r\n        const allUsers = response.data;\r\n        const totalUsers = allUsers.filter(user => user.role === 'user').length;\r\n        const totalAdmins = allUsers.filter(user => user.role === 'admin').length;\r\n\r\n        setUserCount(totalUsers);\r\n        setAdminCount(totalAdmins);\r\n      } catch (error) {\r\n        console.error(\"Error fetching user counts:\", error);\r\n      }\r\n    };\r\n    // Only fetch counts if we're on a page that needs them.\r\n    // (Alternatively, you could always fetch, but it’s unnecessary for the openai page.)\r\n    if (activePage !== 'openai') {\r\n      fetchUserCounts();\r\n    }\r\n  }, [activePage]);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Sidebar activePage={activePage} setActivePage={setActivePage} />\r\n      \r\n      <div className=\"dashboard-content\">\r\n        {/* Show different headings depending on the active page */}\r\n        {activePage === \"openai\" ? (\r\n          <>\r\n            <h1>OpenAI API Settings</h1>\r\n            <OpenAiSettings />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <h1>Dashboard</h1>\r\n\r\n            {/* Stats grid: only shown if active page is not \"openai\" */}\r\n            <div className=\"stats-grid\" style={{ marginBottom: '20px' }}>\r\n              {/* Users Card */}\r\n              <div\r\n                className=\"stats-card\"\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() => setActivePage(\"users\")}\r\n              >\r\n                <div className=\"stats-icon purple-bg\">\r\n                  <FaUsers />\r\n                </div>\r\n                <div className=\"stats-text\">\r\n                  <h3>{userCount}</h3>\r\n                  <span>Users</span>\r\n                </div>\r\n              </div>\r\n              {/* Admins Card */}\r\n              <div\r\n                className=\"stats-card\"\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={() => setActivePage(\"admins\")}\r\n              >\r\n                <div className=\"stats-icon pink-bg\">\r\n                  <FaUserShield />\r\n                </div>\r\n                <div className=\"stats-text\">\r\n                  <h3>{adminCount}</h3>\r\n                  <span>Admins</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Render the user list for \"users\" or \"admins\" */}\r\n            {activePage === \"users\" && (\r\n              <>\r\n                <h2>All Registered Users</h2>\r\n                <UserList activeCard=\"users\" />\r\n              </>\r\n            )}\r\n            {activePage === \"admins\" && (\r\n              <>\r\n                <h2>Admin Users</h2>\r\n                <UserList activeCard=\"admins\" />\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}