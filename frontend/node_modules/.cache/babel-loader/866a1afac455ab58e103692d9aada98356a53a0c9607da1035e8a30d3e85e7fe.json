{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MASTER\\\\Documents\\\\GitHub\\\\translator-app\\\\frontend\\\\src\\\\components\\\\UserList.js\",\n  _s = $RefreshSig$();\n// frontend/components/UserList.js\n\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from '../api/axiosConfig';\nimport UpdateTokensForm from './UpdateTokensForm';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserList = ({\n  activeCard\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [fetchError, setFetchError] = useState('');\n  const [editingUserId, setEditingUserId] = useState(null);\n  const [userDetails, setUserDetails] = useState({});\n  const [loadingUserDetails, setLoadingUserDetails] = useState({}); // Track loading state for each user\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axiosInstance.get('/admin/users');\n        setUsers(response.data);\n      } catch (error) {\n        setFetchError('Failed to fetch users.');\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  // Fetch additional user details (tokens consumed and join date)\n  const fetchUserDetails = async userId => {\n    if (loadingUserDetails[userId]) return; // Prevent refetch if already loading\n\n    setLoadingUserDetails(prev => ({\n      ...prev,\n      [userId]: true\n    })); // Set loading state for the clicked user\n\n    try {\n      const response = await axiosInstance.get(`/users/${userId}`);\n      setUserDetails(prevState => ({\n        ...prevState,\n        [userId]: response.data\n      }));\n    } catch (error) {\n      console.error(\"Error fetching user details:\", error);\n    } finally {\n      setLoadingUserDetails(prev => ({\n        ...prev,\n        [userId]: false\n      })); // Remove loading state after data is fetched\n    }\n  };\n  const handleUserClick = userId => {\n    fetchUserDetails(userId); // Fetch details for the clicked user\n  };\n\n  // Filter: for \"admins\", show only admin users; for \"users\", show only non-admins\n  const filteredUsers = activeCard === \"admins\" ? users.filter(user => user.role === \"admin\") : users.filter(user => user.role !== \"admin\");\n  const handleTokenUpdate = updatedUser => {\n    setUsers(prevUsers => prevUsers.map(user => user._id === updatedUser._id ? updatedUser : user));\n    setEditingUserId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list\",\n    children: [fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: fetchError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }, this), filteredUsers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: activeCard === \"admins\" ? /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Token Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Tokens Consumed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Join Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredUsers.map(user => {\n          var _userDetails$user$_id, _userDetails$user$_id2;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            onClick: () => handleUserClick(user._id),\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), activeCard !== \"admins\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  fontWeight: 'bold',\n                  color: '#2a9d8f'\n                },\n                children: user.tokenBalance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: loadingUserDetails[user._id] ? \"Loading...\" // Show loading if still fetching user details\n                : ((_userDetails$user$_id = userDetails[user._id]) === null || _userDetails$user$_id === void 0 ? void 0 : _userDetails$user$_id.totalTokensConsumed) || 'No data'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: loadingUserDetails[user._id] ? \"Loading...\" // Show loading if still fetching user details\n                : (_userDetails$user$_id2 = userDetails[user._id]) !== null && _userDetails$user$_id2 !== void 0 && _userDetails$user$_id2.joinDate ? new Date(userDetails[user._id].joinDate).toLocaleDateString() : 'No data'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingUserId === user._id ? /*#__PURE__*/_jsxDEV(UpdateTokensForm, {\n                  userId: user._id,\n                  onUpdate: handleTokenUpdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setEditingUserId(user._id),\n                  style: {\n                    background: '#2f3e46',\n                    color: '#fff',\n                    border: 'none',\n                    padding: '6px 10px',\n                    borderRadius: '4px',\n                    cursor: 'pointer'\n                  },\n                  children: \"Edit Tokens\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, user._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"bNt9nt0hvlRL1+2+brJvdcKHq4A=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","axiosInstance","UpdateTokensForm","jsxDEV","_jsxDEV","Fragment","_Fragment","UserList","activeCard","_s","users","setUsers","fetchError","setFetchError","editingUserId","setEditingUserId","userDetails","setUserDetails","loadingUserDetails","setLoadingUserDetails","fetchUsers","response","get","data","error","fetchUserDetails","userId","prev","prevState","console","handleUserClick","filteredUsers","filter","user","role","handleTokenUpdate","updatedUser","prevUsers","map","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_userDetails$user$_id","_userDetails$user$_id2","onClick","username","style","fontWeight","color","tokenBalance","totalTokensConsumed","joinDate","Date","toLocaleDateString","onUpdate","background","border","padding","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/MASTER/Documents/GitHub/translator-app/frontend/src/components/UserList.js"],"sourcesContent":["// frontend/components/UserList.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axiosInstance from '../api/axiosConfig';\r\nimport UpdateTokensForm from './UpdateTokensForm';\r\n\r\nconst UserList = ({ activeCard }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [fetchError, setFetchError] = useState('');\r\n  const [editingUserId, setEditingUserId] = useState(null);\r\n  const [userDetails, setUserDetails] = useState({});\r\n  const [loadingUserDetails, setLoadingUserDetails] = useState({}); // Track loading state for each user\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('/admin/users');\r\n        setUsers(response.data);\r\n      } catch (error) {\r\n        setFetchError('Failed to fetch users.');\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Fetch additional user details (tokens consumed and join date)\r\n  const fetchUserDetails = async (userId) => {\r\n    if (loadingUserDetails[userId]) return; // Prevent refetch if already loading\r\n\r\n    setLoadingUserDetails((prev) => ({ ...prev, [userId]: true })); // Set loading state for the clicked user\r\n\r\n    try {\r\n      const response = await axiosInstance.get(`/users/${userId}`);\r\n      setUserDetails((prevState) => ({\r\n        ...prevState,\r\n        [userId]: response.data\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error fetching user details:\", error);\r\n    } finally {\r\n      setLoadingUserDetails((prev) => ({ ...prev, [userId]: false })); // Remove loading state after data is fetched\r\n    }\r\n  };\r\n\r\n  const handleUserClick = (userId) => {\r\n    fetchUserDetails(userId); // Fetch details for the clicked user\r\n  };\r\n\r\n  // Filter: for \"admins\", show only admin users; for \"users\", show only non-admins\r\n  const filteredUsers =\r\n    activeCard === \"admins\"\r\n      ? users.filter(user => user.role === \"admin\")\r\n      : users.filter(user => user.role !== \"admin\");\r\n\r\n  const handleTokenUpdate = (updatedUser) => {\r\n    setUsers(prevUsers =>\r\n      prevUsers.map(user => (user._id === updatedUser._id ? updatedUser : user))\r\n    );\r\n    setEditingUserId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-list\">\r\n      {fetchError && <p className=\"error-message\">{fetchError}</p>}\r\n      {filteredUsers.length === 0 ? (\r\n        <p>No users found.</p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            {activeCard === \"admins\" ? (\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Role</th>\r\n              </tr>\r\n            ) : (\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Role</th>\r\n                <th>Token Balance</th>\r\n                <th>Total Tokens Consumed</th>\r\n                <th>Join Date</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            )}\r\n          </thead>\r\n          <tbody>\r\n            {filteredUsers.map(user => (\r\n              <tr key={user._id} onClick={() => handleUserClick(user._id)}>\r\n                <td>{user.username}</td>\r\n                <td>{user.role}</td>\r\n                {activeCard !== \"admins\" && (\r\n                  <>\r\n                    <td style={{ fontWeight: 'bold', color: '#2a9d8f' }}>\r\n                      {user.tokenBalance}\r\n                    </td>\r\n                    <td>\r\n                      {loadingUserDetails[user._id]\r\n                        ? \"Loading...\" // Show loading if still fetching user details\r\n                        : userDetails[user._id]?.totalTokensConsumed || 'No data'}\r\n                    </td>\r\n                    <td>\r\n                      {loadingUserDetails[user._id]\r\n                        ? \"Loading...\" // Show loading if still fetching user details\r\n                        : userDetails[user._id]?.joinDate\r\n                          ? new Date(userDetails[user._id].joinDate).toLocaleDateString()\r\n                          : 'No data'}\r\n                    </td>\r\n                    <td>\r\n                      {editingUserId === user._id ? (\r\n                        <UpdateTokensForm \r\n                          userId={user._id} \r\n                          onUpdate={handleTokenUpdate} \r\n                        />\r\n                      ) : (\r\n                        <button \r\n                          onClick={() => setEditingUserId(user._id)}\r\n                          style={{\r\n                            background: '#2f3e46',\r\n                            color: '#fff',\r\n                            border: 'none',\r\n                            padding: '6px 10px',\r\n                            borderRadius: '4px',\r\n                            cursor: 'pointer'\r\n                          }}\r\n                        >\r\n                          Edit Tokens\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                  </>\r\n                )}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}