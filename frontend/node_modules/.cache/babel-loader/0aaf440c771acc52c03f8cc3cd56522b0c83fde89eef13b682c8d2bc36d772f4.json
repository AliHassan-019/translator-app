{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MASTER\\\\Documents\\\\GitHub\\\\translator-app\\\\frontend\\\\src\\\\components\\\\UserList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axiosInstance from '../api/axiosConfig';\nimport UpdateTokensForm from './UpdateTokensForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = ({\n  activeCard\n}) => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [fetchError, setFetchError] = useState('');\n  // Track which row is being edited (store the user ID, or null if none)\n  const [editingUserId, setEditingUserId] = useState(null);\n\n  // Fetch all users once when the component mounts.\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axiosInstance.get('/admin/users');\n        setUsers(response.data);\n      } catch (error) {\n        setFetchError('Failed to fetch users.');\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  // Filter users based on the activeCard prop\n  const filteredUsers = activeCard === \"admins\" ? users.filter(user => user.role === \"admin\") : users; // \"users\" view shows all users\n\n  // Update the user in the local state after editing tokens\n  const handleTokenUpdate = updatedUser => {\n    setUsers(prevUsers => prevUsers.map(user => user._id === updatedUser._id ? updatedUser : user));\n    // Optionally, close the editing form\n    setEditingUserId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list\",\n    children: [fetchError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: fetchError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 22\n    }, this), filteredUsers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No users found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Token Balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              fontWeight: 'bold',\n              color: '#2a9d8f'\n            },\n            children: user.tokenBalance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: editingUserId === user._id ?\n            /*#__PURE__*/\n            // Render the UpdateTokensForm for this user\n            _jsxDEV(UpdateTokensForm, {\n              userId: user._id,\n              onUpdate: handleTokenUpdate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditingUserId(user._id),\n              style: {\n                background: '#2f3e46',\n                color: '#fff',\n                border: 'none',\n                padding: '6px 10px',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"Edit Tokens\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"85RQOs0dUynqNVH2q4/aYO9aPvY=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useEffect","useState","axiosInstance","UpdateTokensForm","jsxDEV","_jsxDEV","UserList","activeCard","_s","users","setUsers","fetchError","setFetchError","editingUserId","setEditingUserId","fetchUsers","response","get","data","error","filteredUsers","filter","user","role","handleTokenUpdate","updatedUser","prevUsers","map","_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","username","style","fontWeight","color","tokenBalance","userId","onUpdate","onClick","background","border","padding","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/MASTER/Documents/GitHub/translator-app/frontend/src/components/UserList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axiosInstance from '../api/axiosConfig';\r\nimport UpdateTokensForm from './UpdateTokensForm';\r\n\r\nconst UserList = ({ activeCard }) => {\r\n  const [users, setUsers] = useState([]);\r\n  const [fetchError, setFetchError] = useState('');\r\n  // Track which row is being edited (store the user ID, or null if none)\r\n  const [editingUserId, setEditingUserId] = useState(null);\r\n\r\n  // Fetch all users once when the component mounts.\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('/admin/users');\r\n        setUsers(response.data);\r\n      } catch (error) {\r\n        setFetchError('Failed to fetch users.');\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Filter users based on the activeCard prop\r\n  const filteredUsers = activeCard === \"admins\"\r\n    ? users.filter(user => user.role === \"admin\")\r\n    : users; // \"users\" view shows all users\r\n\r\n  // Update the user in the local state after editing tokens\r\n  const handleTokenUpdate = (updatedUser) => {\r\n    setUsers(prevUsers =>\r\n      prevUsers.map(user => user._id === updatedUser._id ? updatedUser : user)\r\n    );\r\n    // Optionally, close the editing form\r\n    setEditingUserId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-list\">\r\n      {fetchError && <p className=\"error-message\">{fetchError}</p>}\r\n      {filteredUsers.length === 0 ? (\r\n        <p>No users found.</p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Role</th>\r\n              <th>Token Balance</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredUsers.map(user => (\r\n              <tr key={user._id}>\r\n                <td>{user.username}</td>\r\n                <td>{user.role}</td>\r\n                <td style={{ fontWeight: 'bold', color: '#2a9d8f' }}>\r\n                  {user.tokenBalance}\r\n                </td>\r\n                <td>\r\n                  {editingUserId === user._id ? (\r\n                    // Render the UpdateTokensForm for this user\r\n                    <UpdateTokensForm \r\n                      userId={user._id} \r\n                      onUpdate={handleTokenUpdate} \r\n                    />\r\n                  ) : (\r\n                    <button \r\n                      onClick={() => setEditingUserId(user._id)}\r\n                      style={{\r\n                        background: '#2f3e46',\r\n                        color: '#fff',\r\n                        border: 'none',\r\n                        padding: '6px 10px',\r\n                        borderRadius: '4px',\r\n                        cursor: 'pointer'\r\n                      }}\r\n                    >\r\n                      Edit Tokens\r\n                    </button>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}