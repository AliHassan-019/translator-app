{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\translator-app\\\\frontend\\\\src\\\\pages\\\\OpenAiSettings.js\",\n  _s = $RefreshSig$();\n// frontend/pages/OpenAiSettings.js\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from '../api/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OpenAiSettings = () => {\n  _s();\n  const [apiKey, setApiKey] = useState('');\n  const [newApiKey, setNewApiKey] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const fetchApiKey = async () => {\n      try {\n        const response = await axiosInstance.get('/settings/openai');\n        setApiKey(response.data.openaiApiKey);\n        setNewApiKey(response.data.openaiApiKey);\n      } catch (error) {\n        setMessage('Error fetching API key');\n      }\n    };\n    fetchApiKey();\n  }, []);\n  const handleUpdate = async e => {\n    e.preventDefault();\n    try {\n      const response = await axiosInstance.patch('/settings/openai', {\n        newApiKey\n      });\n      setApiKey(response.data.openaiApiKey);\n      setMessage('API key updated successfully');\n    } catch (error) {\n      setMessage('Error updating API key');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"openai-settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"OpenAI API Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"API Key:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newApiKey,\n          onChange: e => setNewApiKey(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update API Key\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Current API Key:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this), \" \", apiKey]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(OpenAiSettings, \"nouh13zDACkVK4KGi13AmxVHMOQ=\");\n_c = OpenAiSettings;\nexport default OpenAiSettings;\nvar _c;\n$RefreshReg$(_c, \"OpenAiSettings\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","OpenAiSettings","_s","apiKey","setApiKey","newApiKey","setNewApiKey","message","setMessage","fetchApiKey","response","get","data","openaiApiKey","error","handleUpdate","e","preventDefault","patch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["E:/GitHub/translator-app/frontend/src/pages/OpenAiSettings.js"],"sourcesContent":["// frontend/pages/OpenAiSettings.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axiosInstance from '../api/axiosConfig';\r\n\r\nconst OpenAiSettings = () => {\r\n  const [apiKey, setApiKey] = useState('');\r\n  const [newApiKey, setNewApiKey] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchApiKey = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('/settings/openai');\r\n        setApiKey(response.data.openaiApiKey);\r\n        setNewApiKey(response.data.openaiApiKey);\r\n      } catch (error) {\r\n        setMessage('Error fetching API key');\r\n      }\r\n    };\r\n    fetchApiKey();\r\n  }, []);\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axiosInstance.patch('/settings/openai', { newApiKey });\r\n      setApiKey(response.data.openaiApiKey);\r\n      setMessage('API key updated successfully');\r\n    } catch (error) {\r\n      setMessage('Error updating API key');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"openai-settings\">\r\n      <h2>OpenAI API Settings</h2>\r\n      {message && <p>{message}</p>}\r\n      <form onSubmit={handleUpdate}>\r\n        <div>\r\n          <label>API Key:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={newApiKey}\r\n            onChange={(e) => setNewApiKey(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Update API Key</button>\r\n      </form>\r\n      <p><strong>Current API Key:</strong> {apiKey}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenAiSettings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}