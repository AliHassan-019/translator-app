{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MASTER\\\\Documents\\\\GitHub\\\\translator-app\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from '../components/Sidebar';\nimport UserList from '../components/UserList';\nimport axiosInstance from '../api/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [userCount, setUserCount] = useState(0);\n\n  // Fetch users just to get the count; or you could do a separate endpoint that returns count only.\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axiosInstance.get('/admin/users');\n        setUserCount(response.data.length);\n      } catch (error) {\n        console.error('Failed to fetch user count:', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#fff',\n          borderRadius: '8px',\n          padding: '16px',\n          marginBottom: '20px',\n          boxShadow: '0 1px 5px rgba(0,0,0,0.05)'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: '1.4em',\n            margin: '0'\n          },\n          children: [\"Registered Users: \", userCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"kQsV7c1bHV2gHYjPjf2AKhdaYb0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","UserList","axiosInstance","jsxDEV","_jsxDEV","Dashboard","_s","userCount","setUserCount","fetchUsers","response","get","data","length","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","background","borderRadius","padding","boxShadow","fontSize","margin","_c","$RefreshReg$"],"sources":["C:/Users/MASTER/Documents/GitHub/translator-app/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Sidebar from '../components/Sidebar';\r\nimport UserList from '../components/UserList';\r\nimport axiosInstance from '../api/axiosConfig';\r\n\r\nfunction Dashboard() {\r\n  const [userCount, setUserCount] = useState(0);\r\n\r\n  // Fetch users just to get the count; or you could do a separate endpoint that returns count only.\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('/admin/users');\r\n        setUserCount(response.data.length);\r\n      } catch (error) {\r\n        console.error('Failed to fetch user count:', error);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      {/* LEFT SIDEBAR */}\r\n      <Sidebar />\r\n\r\n      {/* MAIN CONTENT AREA */}\r\n      <div className=\"dashboard-content\">\r\n        {/* Just a title and a short stats line */}\r\n        <h1 style={{ marginBottom: '10px' }}>Dashboard</h1>\r\n        <div style={{\r\n          background: '#fff',\r\n          borderRadius: '8px',\r\n          padding: '16px',\r\n          marginBottom: '20px',\r\n          boxShadow: '0 1px 5px rgba(0,0,0,0.05)'\r\n        }}>\r\n          <h2 style={{ fontSize: '1.4em', margin: '0' }}>Registered Users: {userCount}</h2>\r\n        </div>\r\n\r\n        {/* User List */}\r\n        <UserList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,aAAa,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;;EAE7C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,aAAa,CAACS,GAAG,CAAC,cAAc,CAAC;QACxDH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDL,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKY,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAElCb,OAAA,CAACJ,OAAO;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGXjB,OAAA;MAAKY,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAEhCb,OAAA;QAAIkB,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAN,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnDjB,OAAA;QAAKkB,KAAK,EAAE;UACVE,UAAU,EAAE,MAAM;UAClBC,YAAY,EAAE,KAAK;UACnBC,OAAO,EAAE,MAAM;UACfH,YAAY,EAAE,MAAM;UACpBI,SAAS,EAAE;QACb,CAAE;QAAAV,QAAA,eACAb,OAAA;UAAIkB,KAAK,EAAE;YAAEM,QAAQ,EAAE,OAAO;YAAEC,MAAM,EAAE;UAAI,CAAE;UAAAZ,QAAA,GAAC,oBAAkB,EAACV,SAAS;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC,eAGNjB,OAAA,CAACH,QAAQ;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACf,EAAA,CAxCQD,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AA0ClB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}